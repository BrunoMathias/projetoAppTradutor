{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/painel/frases-mock.ts","webpack:///./src/app/painel/painel.component.css","webpack:///./src/app/painel/painel.component.html","webpack:///./src/app/painel/painel.component.ts","webpack:///./src/app/progresso/progresso.component.css","webpack:///./src/app/progresso/progresso.component.html","webpack:///./src/app/progresso/progresso.component.ts","webpack:///./src/app/shared/coracao.model.ts","webpack:///./src/app/tentativas/tentativas.component.css","webpack:///./src/app/tentativas/tentativas.component.html","webpack:///./src/app/tentativas/tentativas.component.ts","webpack:///./src/app/topo/topo.component.css","webpack:///./src/app/topo/topo.component.html","webpack:///./src/app/topo/topo.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"p {\\r\\n    font-size: 25px;\\r\\n    color: red;\\r\\n}\"","module.exports = \"\\n<app-topo></app-topo>\\n<div *ngIf='jogoEmAndamento; else fimDeJogo'>\\n    <app-painel (encerrarJogo)='encerrarJogo($event)'></app-painel>\\n</div>\\n<ng-template #fimDeJogo>\\n    <div *ngIf=\\\"tipoEncerramento === 'Derrota'; else fimDeJogoVitoria\\\" class=\\\"container\\\" style=\\\"margin-top: 50px\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <h3 style=\\\"color:red\\\">\\n                    Infelizmente você perdeu o jogo T_T\\n                </h3>\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"reiniciarJogo()\\\">Reiniciar</button>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n<ng-template #fimDeJogoVitoria>\\n    <div class=\\\"container\\\" style=\\\"margin-top: 50px\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <h3 style=\\\"color:palegreen\\\">\\n                    Você Ganhou o jogo\\n                </h3>\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"reiniciarJogo()\\\">Reiniciar</button>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n\n  public jogoEmAndamento: boolean = true\n  public tipoEncerramento: string\n\n  public encerrarJogo(tipo: string): void{\n    this.jogoEmAndamento = false\n    this.tipoEncerramento = tipo\n  } \n\n  public reiniciarJogo(): void{\n    this.jogoEmAndamento = true\n    this.tipoEncerramento = undefined\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { TopoComponent } from './topo/topo.component';\nimport { PainelComponent } from './painel/painel.component';\nimport { TentativasComponent } from './tentativas/tentativas.component';\nimport { ProgressoComponent } from './progresso/progresso.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopoComponent,\n    PainelComponent,\n    TentativasComponent,\n    ProgressoComponent,\n\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Frase} from '../shared/frase.model'\r\n\r\nexport const FRASES: Frase[] = [\r\n\r\n    {fraseEng: 'I like to learn', frasePtBr: 'Eu gosto de aprender'},\r\n    {fraseEng: 'I watch tv', frasePtBr: 'Eu assisto tv'},\r\n    {fraseEng: 'How are you?', frasePtBr: 'Como vai você?'},\r\n    {fraseEng: 'I eat bread', frasePtBr: 'Eu como pão'}\r\n\r\n]","module.exports = \".jumbotron{\\r\\n    padding-top: 30px;\\r\\n    margin-top: 25px;\\r\\n    padding-bottom: 30px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <app-progresso [progresso]='progresso'></app-progresso>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <div class=\\\"d-flex justify-content-end\\\">\\r\\n                    <app-tentativas [tentativas]='tentativas'></app-tentativas>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <h6>{{ instrucao }}</h6> <!-- Interpolação do tipo String Interpolation  -->\\r\\n                <p>{{ rodadaFrase.fraseEng }}</p> <!--String Interpolation onde recupero valor\\r\\n                     de Array Especifico. No caso acesso o array e seu atributo em seguida-->\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <textarea class=\\\"form-control\\\" \\r\\n                    rows=\\\"3\\\" \\r\\n                    (input)='atualizaResposta($event)'\\r\\n                    [value]='resposta'\\r\\n                    ></textarea>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <div class=\\\"d-flex justify-content-end\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)='verificaResposta()'>Traduzir</button>\\r\\n                </div>\\r\\n                \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, EventEmitter, Output, OnDestroy } from '@angular/core';\nimport {Frase} from '../shared/frase.model'\nimport {FRASES} from './frases-mock'\n\n@Component({\n  selector: 'app-painel',\n  templateUrl: './painel.component.html',\n  styleUrls: ['./painel.component.css']\n})\nexport class PainelComponent implements OnInit, OnDestroy {\n\n\n  public frases: Frase[] = FRASES\n  public instrucao: string = 'Traduza'\n  public resposta: string = ''\n\n  public rodada: number = 0\n  public rodadaFrase: Frase\n\n  public progresso: number = 0\n\n  public tentativas: number = 3 //Corações - \n\n  @Output() public encerrarJogo: EventEmitter<String> = new EventEmitter()\n  \n  constructor() {\n    this.atualizaRodada() //Criei esta função pois a utilizo em dois blocos dioferentes neste codigo\n    }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy(){\n    //console.log('Jogo Destruido')\n  }\n\n  // Capturo event do meu codigo html onde defini o parametro $event no textare\n  public atualizaResposta(resposta: Event): void{\n    this.resposta = (<HTMLInputElement>resposta.target).value\n    //console.log(this.resposta)\n  }\n\n  /*Atraves do Evento Click no botão Verificar do HTML, recebo o que foi digitado\n  atraves da variavel resposta declarada acima\n  */\n  public verificaResposta(): void{\n    \n    if(this.rodadaFrase.frasePtBr == this.resposta){\n      /* Acesso o atributo atual de rodadaFrase PtBr e comparo com a resposta digitada\n      e capturada no textbox pela variavel resposta */\n      //alert('Tradução Correta')\n\n      //TROCA PERGUNTA DA RODADA\n      this.rodada++\n\n      if(this.rodada == 4){\n        this.encerrarJogo.emit('Vitoria')\n      }\n\n      //Atualiza objeto da rodada\n\n      \n      this.atualizaRodada()\n\n      //Progresso\n      this.progresso = this.progresso + (100 / this.frases.length)\n      //console.log(this.progresso)\n\n      \n    }\n    else{\n      //alert('Tradução Errada')\n      this.tentativas--\n      if(this.tentativas === -1){\n        this.encerrarJogo.emit('Derrota')\n      }\n    }\n      \n  }\n\n  public atualizaRodada(): void{\n    /* atribuo a rodadaFrase, uma frase guardada no meu array de frases na posição especificada guardada\n    na vcariavel rodada */\n    this.rodadaFrase = this.frases[this.rodada]\n\n    //limpa resposta\n    this.resposta = ''\n  }\n\n}\n","module.exports = \".progress{\\r\\n    border: solid 1px white\\r\\n}\"","module.exports = \"<div class=\\\"progress bg-secondary\\\">\\n    <div class=\\\"progress-bar w-{{ progresso }} bg-success\\\" ></div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-progresso',\n  templateUrl: './progresso.component.html',\n  styleUrls: ['./progresso.component.css']\n})\nexport class ProgressoComponent implements OnInit {\n\n  @Input() progresso: number = 0 /* Recupero atraves da função Input o valor atribuido em progresso no componente do painel */\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Coracao{\r\n\r\n    constructor(public cheio: boolean, \r\n        public urlCoracaoCheio: string = '/assets/cheio.png',\r\n        public urlCoracaoVazio: string =  '/assets/vazio.png'\r\n        ){}\r\n\r\n    public exibeCoracao(): string{\r\n        if(this.cheio){\r\n            return this.urlCoracaoCheio\r\n        }else{\r\n            return this.urlCoracaoVazio\r\n        }\r\n    }    \r\n}","module.exports = \"\"","module.exports = \"<!-- \\n<img [src]=\\\"coracaoVazio\\\">\\n<img [src]=\\\"coracaoCheio\\\">\\n<img [src]=\\\"coracaoCheio\\\">\\n-->\\n\\n<img *ngFor='let coracao of coracoes' [src]='coracao.exibeCoracao()'>\"","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { Coracao } from '../shared/coracao.model';\n\n@Component({\n  selector: 'app-tentativas',\n  templateUrl: './tentativas.component.html',\n  styleUrls: ['./tentativas.component.css']\n})\nexport class TentativasComponent implements OnInit, OnChanges {\n\n  @Input() public tentativas: number //trago o numero de tentativas atrasves  PropetyBiding\n\n\n  public coracoes: Coracao[] = [ //Crio array com 3 Objeto do tipo Coração\n    new Coracao(true),\n    new Coracao(true),\n    new Coracao(true)\n\n  ]\n\n  constructor() { \n    //console.log(this.coracoes)\n  }\n\n\n  ngOnChanges(){\n    //this.tentativas\n    //this.coraccoes.lenght (Conto o numero de indices dentro do array com o Lenght)\n\n\n    if(this.tentativas !== this.coracoes.length){\n      let indice = this.coracoes.length - this.tentativas /* Tenho um total de 3 tentativas para 3 indices\n      quanto tiver alteração ele entrará nesta verificação e fará Nº Tentativas - Numero de Indices do Array      \n      */\n      this.coracoes[indice - 1].cheio = false //Indice decremento 1 pois a primeira posição do array é 0\n    }\n    \n  }\n\n  ngOnInit() {\n    \n  }\n\n}\n","module.exports = \".exemplo{\\r\\n    color: blue\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark\\\">\\r\\n    <span class=\\\"navbar-brand mb-0 h1\\\">{{titulo}}</span>\\r\\n</nav>\"","import { Component } from '@angular/core'\r\n\r\n@Component({\r\n    selector:'app-topo',\r\n    templateUrl: './topo.component.html',\r\n    styleUrls: ['./topo.component.css']\r\n})\r\n\r\nexport class TopoComponent{\r\n\r\n    public titulo: String = 'Aprendendo Inglês com o Bruno'\r\n    \r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}